{"ast":null,"code":"import CardUser from './CardUser.vue';\nimport { getAllUsers } from '../api/user/getAllUsers';\nimport { getAllFriends } from '../api/user/getAllFriends';\nexport default {\n  components: {\n    CardUser\n  },\n  data() {\n    return {\n      search: '',\n      count: 0,\n      users: [],\n      usersDisplayed: [],\n      username: localStorage.getItem('username')\n    };\n  },\n  methods: {\n    getUsersAux() {\n      this.users = [{\n        _id: this.count++,\n        username: 'user1',\n        friend: true\n      }, {\n        _id: this.count++,\n        username: 'user2',\n        friend: false\n      }, {\n        _id: this.count++,\n        username: 'user4',\n        friend: false\n      }, {\n        _id: this.count++,\n        username: 'user5',\n        friend: true\n      }, {\n        _id: this.count++,\n        username: 'user7.',\n        friend: true\n      }, {\n        _id: this.count++,\n        username: 'user6',\n        friend: true\n      }];\n    },\n    fetchUsers() {\n      getAllUsers().then(({\n        data\n      }) => {\n        // descrutoring data\n        this.users = data;\n        this.users = this.users.filter(user => {\n          return user.username !== this.username;\n        });\n        this.usersDisplayed = this.users;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    searchUser() {\n      this.usersDisplayed = this.users.filter(user => {\n        let regex = new RegExp('^' + this.search + '', 'gi');\n        return regex.test(user.username);\n      });\n    },\n    fetchFriends() {\n      getAllFriends().then(({\n        data\n      }) => {\n        // descrutoring data\n        const friends = data.friend_username;\n        console.log(friends);\n        this.usersDisplayed = this.users.filter(user => {\n          return friends.includes(user.username);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  mounted() {\n    //this.getUsersAux()\n    this.fetchUsers();\n  }\n};","map":{"version":3,"mappings":"AA6BA;AACA;AACA;AAEA;EACAA;IACAC;EACA;EAEAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;MACA,cACA;QAAAC;QAAAH;QAAAI;MAAA,GACA;QAAAD;QAAAH;QAAAI;MAAA,GACA;QAAAD;QAAAH;QAAAI;MAAA,GACA;QAAAD;QAAAH;QAAAI;MAAA,GACA;QAAAD;QAAAH;QAAAI;MAAA,GACA;QAAAD;QAAAH;QAAAI;MAAA,EACA;IACA;IACAC;MACAC,cACAC;QAAAZ;MAAA;QAAA;QACA;QACA;UACA;QACA;QACA;MACA,GACAa;QACAC;MACA;IACA;IACAC;MACA;QACA;QACA;MACA;IACA;IACAC;MACAC,gBACAL;QAAAZ;MAAA;QAAA;QACA;QACAc;QACA;UACA;QACA;MACA,GACAD;QACAC;MACA;IACA;EACA;EAEAI;IACA;IACA;EACA;AACA","names":["components","CardUser","data","search","count","users","usersDisplayed","username","methods","getUsersAux","_id","friend","fetchUsers","getAllUsers","then","catch","console","searchUser","fetchFriends","getAllFriends","mounted"],"sourceRoot":"src/components","sources":["ListUsers.vue"],"sourcesContent":["<template>\n    <v-container class=\"d-flex flex-column justify-center align-center mt-16 px-4\">\n        <div class=\"d-flex flex-row justify-center align-center mb-6\">\n            <v-text-field\n                v-model=\"search\"\n                append-icon=\"mdi-magnify\"\n                label=\"Search a username\"\n                single-line\n                hide-details\n                background-color=\"rgba(0, 0, 0, 0.15)\"\n                color=\"white\"\n                placeholder=\"Look for a username\"\n                filled\n                rounded\n                @input=\"searchUser()\"\n                ></v-text-field>\n                <v-btn icon x-large outlined color=\"black\" class=\"align-self-center ml-4\" @click=\"fetchFriends()\">\n                    <v-icon icon color=\"green\">mdi-bookmark</v-icon>\n                </v-btn>\n        </div>\n    <div v-if=\"users\">\n        <v-container v-for=\"user in usersDisplayed\" v-bind:key=\"user.username\" info.sync=\"user\">\n            <CardUser :info=\"user\"/>\n        </v-container>\n    </div> \n    </v-container>\n</template>\n\n<script>\n    import CardUser from './CardUser.vue'\n    import {getAllUsers} from '../api/user/getAllUsers'\n    import {getAllFriends} from '../api/user/getAllFriends'\n\n    export default {\n        components: {\n            CardUser,\n        },\n\n        data() {\n            return {\n                search: '',\n                count: 0,\n                users: [],\n                usersDisplayed: [],\n                username: localStorage.getItem('username'),\n            }\n        },\n\n        methods: {\n            getUsersAux() {\n                this.users = [\n                    {_id: this.count++, username: 'user1', friend: true},\n                    {_id: this.count++, username: 'user2', friend: false},\n                    {_id: this.count++, username: 'user4', friend: false},\n                    {_id: this.count++, username: 'user5', friend: true},\n                    {_id: this.count++, username: 'user7.', friend: true},\n                    {_id: this.count++, username: 'user6', friend: true},\n                ]\n            },\n            fetchUsers() {\n                getAllUsers()\n                .then(({data}) => {  // descrutoring data\n                    this.users = data\n                    this.users = this.users.filter((user) => {\n                        return (user.username !== this.username)\n                    })\n                    this.usersDisplayed = this.users\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            },\n            searchUser() {\n                this.usersDisplayed = this.users.filter((user) => {\n                    let regex = new RegExp('^'+this.search+'', 'gi')\n                    return (regex.test(user.username))\n                })\n            },\n            fetchFriends() {\n                getAllFriends()\n                .then(({data}) => {  // descrutoring data\n                    const friends = data.friend_username\n                    console.log(friends)\n                    this.usersDisplayed = this.users.filter((user) => {\n                        return (friends.includes(user.username))\n                    })\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            }\n        },\n\n        mounted() {\n            //this.getUsersAux()\n            this.fetchUsers()\n        },\n    }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}